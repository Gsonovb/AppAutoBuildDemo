name: build-cd-tag

on:
  push:
    tags:
      - "v*"

  workflow_dispatch:

jobs:
  build-cd-publish:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        RuntimeIdentifier:
          [win-x64, win-x86]
          #, linux-x64, linux-musl-x64, linux-arm, linux-arm64

    steps:
      - run: echo "GITHUB_REF  $GITHUB_REF GITHUB_EVENT_NAME $GITHUB_EVENT_NAME  GITHUB_EVENT_PATH $GITHUB_EVENT_PATH GITHUB_ACTION $GITHUB_ACTION   GITHUB_RUN_ID $GITHUB_RUN_ID GITHUB_RUN_NUMBER $GITHUB_RUN_NUMBER"

      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Build
        run: cd src &&  dotnet publish -c Release -r $RuntimeIdentifier -p:PublishSingleFile=true --self-contained true  -o ../publish/$RuntimeIdentifier 
        env:
          RuntimeIdentifier: ${{ matrix.RuntimeIdentifier }}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.RuntimeIdentifier}}
          retention-days: 1
          path: ./publish/${{matrix.RuntimeIdentifier}}/*

      # - uses: "marvinpinto/action-automatic-releases@latest"
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     automatic_release_tag: latest
      #     title: "${{ github.run_id }}-${{ github.run_number }}"
      #     prerelease: true
      #     files: ./publish/*.zip

  build-cd-upload:
    needs: build-cd-publish
    runs-on: ubuntu-latest

    steps:
      - run: echo "GITHUB_REF  $GITHUB_REF GITHUB_EVENT_NAME $GITHUB_EVENT_NAME  GITHUB_EVENT_PATH $GITHUB_EVENT_PATH GITHUB_ACTION $GITHUB_ACTION   GITHUB_RUN_ID $GITHUB_RUN_ID GITHUB_RUN_NUMBER $GITHUB_RUN_NUMBER"

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          path: ./publish/

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ./publish/

      - name: Package Release
        run: ./scripts/publishpackage.ps1
        shell: pwsh
        env:
          publishdir: ./publish

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          #automatic_release_tag: latest
          #title:
          prerelease: false
          files: ./publish/*.zip
